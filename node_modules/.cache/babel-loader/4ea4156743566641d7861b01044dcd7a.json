{"ast":null,"code":"var _jsxFileName = \"/Users/mariannebourcier/werun/react-front-end/src/components/FindRun.jsx\";\n\n/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport Run from \"./Run\";\nimport Map from \"./Map\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\nexport default function FindRun() {\n  var _this = this;\n\n  // const { runs } = useLoaderData();\n  var runs = useRecoilValue(runsState);\n\n  var showAvailableRuns = function showAvailableRuns(runs, type) {\n    var runsArray = Object.values(runs);\n    return runsArray.map(function (run) {\n      return /*#__PURE__*/React.createElement(Run, {\n        key: run.id,\n        run: run,\n        type: type,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 35\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"All available runs you can join:\"), showAvailableRuns(runs, \"available\"));\n}","map":{"version":3,"names":["React","Run","Map","useLoaderData","useRecoilValue","runsState","FindRun","runs","showAvailableRuns","type","runsArray","Object","values","map","run","id"],"sources":["/Users/mariannebourcier/werun/react-front-end/src/components/FindRun.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport Run from \"./Run\";\nimport Map from \"./Map\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\n\nexport default function FindRun() {\n  // const { runs } = useLoaderData();\n  const runs = useRecoilValue(runsState);\n\n  const showAvailableRuns = (runs, type) => {\n    const runsArray = Object.values(runs);\n    return runsArray.map((run) => <Run key={run.id} run={run} type={type} />);\n  };\n\n  return (\n    <>\n      <Map />\n      <h1>All available runs you can join:</h1>\n      {showAvailableRuns(runs, \"available\")}\n    </>\n  );\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAChC;EACA,IAAMC,IAAI,GAAGH,cAAc,CAACC,SAAD,CAA3B;;EAEA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACD,IAAD,EAAOE,IAAP,EAAgB;IACxC,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAlB;IACA,OAAOG,SAAS,CAACG,GAAV,CAAc,UAACC,GAAD;MAAA,oBAAS,oBAAC,GAAD;QAAK,GAAG,EAAEA,GAAG,CAACC,EAAd;QAAkB,GAAG,EAAED,GAAvB;QAA4B,IAAI,EAAEL,IAAlC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAT;IAAA,CAAd,CAAP;EACD,CAHD;;EAKA,oBACE,uDACE,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sCAFF,EAGGD,iBAAiB,CAACD,IAAD,EAAO,WAAP,CAHpB,CADF;AAOD"},"metadata":{},"sourceType":"module"}