{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mariannebourcier/werun/react-front-end/src/components/DefaultMap.jsx\";\n\nimport React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Markers from \"./Markers\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\n\nvar DefaultMap = function DefaultMap(_ref) {\n  var center = _ref.center,\n      zoom = _ref.zoom;\n  var marker = useRecoilValue(runsState);\n  console.log(marker);\n\n  var showMarkers = function showMarkers(marker) {\n    var runsArray = Object.values(marker);\n    return runsArray.map(function (run) {\n      return /*#__PURE__*/React.createElement(Markers, {\n        key: run.id,\n        name: run.name,\n        lat: run.latitude,\n        lng: run.longitude,\n        text: run.id,\n        tooltip: run.name //  text={run.name}\n        //  onClick={() => <div className=\"info\" text={run.name}/>} \n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 35\n        }\n      });\n    });\n  };\n\n  var myKey = process.env.REACT_APP_MAP_API_KEY;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: myKey\n    },\n    defaultCenter: center,\n    defaultZoom: zoom,\n    yesIWantToUseGoogleMapApiInternals: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, showMarkers(marker)));\n};","map":{"version":3,"names":["React","GoogleMapReact","Markers","useRecoilValue","runsState","DefaultMap","center","zoom","marker","console","log","showMarkers","runsArray","Object","values","map","run","id","name","latitude","longitude","myKey","process","env","REACT_APP_MAP_API_KEY","key"],"sources":["/Users/mariannebourcier/werun/react-front-end/src/components/DefaultMap.jsx"],"sourcesContent":["import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport Markers from \"./Markers\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\n\n\nconst DefaultMap = ({ center, zoom }) => {\n\n  const marker = useRecoilValue(runsState);\n  console.log(marker)\n\n\n  const showMarkers = (marker) => {\n    const runsArray = Object.values(marker);\n    \n    return runsArray.map((run) => <Markers\n     key={run.id}\n     name={run.name}\n     lat={run.latitude}\n     lng={run.longitude}\n     text={run.id}\n     tooltip={run.name}\n    //  text={run.name}\n    //  onClick={() => <div className=\"info\" text={run.name}/>} \n     />);\n  };\n\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n\n  return (\n    <>\n    <GoogleMapReact\n    bootstrapURLKeys={{\n      key: myKey\n     }}\n    defaultCenter={center}\n    defaultZoom={zoom}\n    yesIWantToUseGoogleMapApiInternals\n    >\n    \n    {showMarkers(marker)}\n\n    </GoogleMapReact>\n    </>\n  )\n\n}\n   "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAsB;EAAA,IAAnBC,MAAmB,QAAnBA,MAAmB;EAAA,IAAXC,IAAW,QAAXA,IAAW;EAEvC,IAAMC,MAAM,GAAGL,cAAc,CAACC,SAAD,CAA7B;EACAK,OAAO,CAACC,GAAR,CAAYF,MAAZ;;EAGA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,MAAD,EAAY;IAC9B,IAAMI,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcN,MAAd,CAAlB;IAEA,OAAOI,SAAS,CAACG,GAAV,CAAc,UAACC,GAAD;MAAA,oBAAS,oBAAC,OAAD;QAC7B,GAAG,EAAEA,GAAG,CAACC,EADoB;QAE7B,IAAI,EAAED,GAAG,CAACE,IAFmB;QAG7B,GAAG,EAAEF,GAAG,CAACG,QAHoB;QAI7B,GAAG,EAAEH,GAAG,CAACI,SAJoB;QAK7B,IAAI,EAAEJ,GAAG,CAACC,EALmB;QAM7B,OAAO,EAAED,GAAG,CAACE,IANgB,CAO9B;QACA;QAR8B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAT;IAAA,CAAd,CAAP;EAUD,CAbD;;EAeA,IAAMG,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA1B;EAEA,oBACE,uDACA,oBAAC,cAAD;IACA,gBAAgB,EAAE;MAChBC,GAAG,EAAEJ;IADW,CADlB;IAIA,aAAa,EAAEf,MAJf;IAKA,WAAW,EAAEC,IALb;IAMA,kCAAkC,MANlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GASCI,WAAW,CAACH,MAAD,CATZ,CADA,CADF;AAiBD,CAxCD"},"metadata":{},"sourceType":"module"}