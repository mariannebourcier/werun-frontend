{"ast":null,"code":"var _jsxFileName = \"/Users/mariannebourcier/werun/react-front-end/src/components/Map.jsx\";\n//import { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport React from \"react\";\nimport \"../components/Map.css\";\nimport GoogleMapReact from \"google-map-react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\nimport Markers, { handleActiveMarker } from \"./Markers\";\nexport default function SimpleMap() {\n  var _this = this;\n\n  var marker = useRecoilValue(runsState);\n  console.log(marker);\n\n  var showMarkers = function showMarkers(marker) {\n    var runsArray = Object.values(marker);\n    return runsArray.map(function (run) {\n      return /*#__PURE__*/React.createElement(Markers, {\n        key: run.id,\n        name: run.name,\n        lat: run.latitude,\n        lng: run.longitude //  text = {\"1\"}\n        //onClick={() => handleActiveMarker(run.id)} \n        ,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 35\n        }\n      });\n    });\n  }; // const location = async () =>  {\n  //   const result = await navigator.geolocation.getCurrentPosition((position) => {\n  //   const latitude = position.coords.latitude;\n  //   const longitude = position.coords.longitude;\n  //   console.log(latitude);\n  //   });\n  //   console.log(result)\n  // }\n  // console.log(location())\n  // navigator.geolocation.getCurrentPosition(function(position){\n  //   const latitude = position.coords.latitude\n  //   resolve({latitude});\n  // })\n  // .then(response => console.log(response))\n  //   let lat = \"\";\n  //   let lon = \"\";\n  //   const promise = new Promise(function(resolve, reject) {\n  //     navigator.geolocation.getCurrentPosition(function(pos){\n  //         lat = pos.coords.latitude\n  //         lon = pos.coords.longitude\n  //         resolve({lat,lon});\n  //     }) \n  // })\n  // promise.then(function(value) {\n  //       console.log(value.lat,value.lon)  \n  // });\n\n\n  var defaultProps = {\n    center: {\n      lat: 10,\n      lng: 10\n    },\n    zoom: 7\n  };\n\n  componentWillMount = function componentWillMount() {\n    navigator.geolocation.getCurrentPosition(_this.position);\n  };\n\n  position = function position(coord) {\n    var lat = coord.coords.latitude;\n    var lon = coord.coords.longitude;\n\n    _this.setState({\n      center: {\n        lat: lat,\n        lng: lon\n      },\n      currentPosition: true\n    });\n  };\n\n  var myKey = process.env.REACT_APP_MAP_API_KEY;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '80vh',\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: myKey\n    },\n    defaultCenter: defaultProps.center,\n    defaultZoom: defaultProps.zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, showMarkers(marker)));\n}","map":{"version":3,"names":["React","GoogleMapReact","useLoaderData","useRecoilValue","runsState","Markers","handleActiveMarker","SimpleMap","marker","console","log","showMarkers","runsArray","Object","values","map","run","id","name","latitude","longitude","defaultProps","center","lat","lng","zoom","componentWillMount","navigator","geolocation","getCurrentPosition","position","coord","coords","lon","setState","currentPosition","myKey","process","env","REACT_APP_MAP_API_KEY","height","width","key"],"sources":["/Users/mariannebourcier/werun/react-front-end/src/components/Map.jsx"],"sourcesContent":["//import { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport React  from \"react\";\nimport \"../components/Map.css\";\nimport GoogleMapReact from \"google-map-react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { useRecoilValue } from \"recoil\";\nimport { runsState } from \"../hooks/useAppData\";\n\n\nimport Markers, { handleActiveMarker } from \"./Markers\";\n\n\n\n\nexport default function SimpleMap(){\n\n  const marker = useRecoilValue(runsState);\n  console.log(marker)\n\n  \n\n\n  const showMarkers = (marker) => {\n    const runsArray = Object.values(marker);\n    \n    return runsArray.map((run) => <Markers\n     key={run.id}\n     name={run.name}\n     lat={run.latitude}\n     lng={run.longitude}\n    //  text = {\"1\"}\n     //onClick={() => handleActiveMarker(run.id)} \n     />);\n  };\n\n  // const location = async () =>  {\n  //   const result = await navigator.geolocation.getCurrentPosition((position) => {\n  //   const latitude = position.coords.latitude;\n  //   const longitude = position.coords.longitude;\n\n  //   console.log(latitude);\n  //   });\n  //   console.log(result)\n  // }\n\n  // console.log(location())\n\n  // navigator.geolocation.getCurrentPosition(function(position){\n  //   const latitude = position.coords.latitude\n  //   resolve({latitude});\n  // })\n  // .then(response => console.log(response))\n\n//   let lat = \"\";\n//   let lon = \"\";\n\n//   const promise = new Promise(function(resolve, reject) {\n//     navigator.geolocation.getCurrentPosition(function(pos){\n//         lat = pos.coords.latitude\n//         lon = pos.coords.longitude\n//         resolve({lat,lon});\n//     }) \n// })\n\n// promise.then(function(value) {\n//       console.log(value.lat,value.lon)  \n// });\n\n  \n  const defaultProps = {\n    center: {\n      lat:  10,\n      lng:  10\n    },\n    zoom: 7\n  };\n\n  componentWillMount = () => {\n    navigator.geolocation.getCurrentPosition(this.position)\n  }\n\n  position = (coord) => {\n    const lat = coord.coords.latitude\n    const lon = coord.coords.longitude\n    this.setState({\n      center: {lat: lat, lng: lon},\n      currentPosition: true\n    })\n  }\n\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n\n  return (\n    <div style={{ height: '80vh', width: '80%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: myKey }}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n      >\n        {showMarkers(marker)}\n      </GoogleMapReact>\n    </div>\n  );\n}\n\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAO,uBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAGA,OAAOC,OAAP,IAAkBC,kBAAlB,QAA4C,WAA5C;AAKA,eAAe,SAASC,SAAT,GAAoB;EAAA;;EAEjC,IAAMC,MAAM,GAAGL,cAAc,CAACC,SAAD,CAA7B;EACAK,OAAO,CAACC,GAAR,CAAYF,MAAZ;;EAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,MAAD,EAAY;IAC9B,IAAMI,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcN,MAAd,CAAlB;IAEA,OAAOI,SAAS,CAACG,GAAV,CAAc,UAACC,GAAD;MAAA,oBAAS,oBAAC,OAAD;QAC7B,GAAG,EAAEA,GAAG,CAACC,EADoB;QAE7B,IAAI,EAAED,GAAG,CAACE,IAFmB;QAG7B,GAAG,EAAEF,GAAG,CAACG,QAHoB;QAI7B,GAAG,EAAEH,GAAG,CAACI,SAJoB,CAK9B;QACC;QAN6B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAT;IAAA,CAAd,CAAP;EAQD,CAXD,CARiC,CAqBjC;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EAEF;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;;EAGE,IAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE;MACNC,GAAG,EAAG,EADA;MAENC,GAAG,EAAG;IAFA,CADW;IAKnBC,IAAI,EAAE;EALa,CAArB;;EAQAC,kBAAkB,GAAG,8BAAM;IACzBC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAI,CAACC,QAA9C;EACD,CAFD;;EAIAA,QAAQ,GAAG,kBAACC,KAAD,EAAW;IACpB,IAAMR,GAAG,GAAGQ,KAAK,CAACC,MAAN,CAAab,QAAzB;IACA,IAAMc,GAAG,GAAGF,KAAK,CAACC,MAAN,CAAaZ,SAAzB;;IACA,KAAI,CAACc,QAAL,CAAc;MACZZ,MAAM,EAAE;QAACC,GAAG,EAAEA,GAAN;QAAWC,GAAG,EAAES;MAAhB,CADI;MAEZE,eAAe,EAAE;IAFL,CAAd;EAID,CAPD;;EASA,IAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA1B;EAEA,oBACE;IAAK,KAAK,EAAE;MAAEC,MAAM,EAAE,MAAV;MAAkBC,KAAK,EAAE;IAAzB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IACE,gBAAgB,EAAE;MAAEC,GAAG,EAAEN;IAAP,CADpB;IAEE,aAAa,EAAEf,YAAY,CAACC,MAF9B;IAGE,WAAW,EAAED,YAAY,CAACI,IAH5B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAKGd,WAAW,CAACH,MAAD,CALd,CADF,CADF;AAWD"},"metadata":{},"sourceType":"module"}