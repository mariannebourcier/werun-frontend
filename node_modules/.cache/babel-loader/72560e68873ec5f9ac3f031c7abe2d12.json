{"ast":null,"code":"var _jsxFileName = \"/Users/mariannebourcier/werun/react-front-end/src/components/AutoComplete.jsx\";\nimport { usePlacesWidget } from \"react-google-autocomplete\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nexport default function AutoComplete(props) {\n  var myKey = process.env.REACT_APP_MAP_API_KEY;\n  var setAddress = props.setAddress,\n      setCoords = props.setCoords; // const [placeName, setPlaceName] = useState(\"\");\n  // const [address, setAddress] = useState(\"\");\n  // const [coords, setCoords] = useState({ lat: \"\", lng: \"\" });\n\n  var _usePlacesWidget = usePlacesWidget({\n    apiKey: myKey,\n    onPlaceSelected: function onPlaceSelected(place) {\n      setAddress(place.formatted_address);\n      console.log(\"This is the place address:\", place.formatted_address);\n      setCoords(place.geometry.location.lat(), place.geometry.location.lng());\n    },\n    options: {\n      types: [\"park\"],\n      componentRestrictions: {\n        country: \"ca\"\n      },\n      fields: [\"name\", \"formatted_address\", \"geometry\"]\n    },\n    inputAutocompleteValue: \"text\"\n  }),\n      locationRef = _usePlacesWidget.ref;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    ref: locationRef // placeholder=\"Which park will this run be at?\"\n    ,\n    autoComplete: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"names":["usePlacesWidget","React","useState","Form","AutoComplete","props","myKey","process","env","REACT_APP_MAP_API_KEY","setAddress","setCoords","apiKey","onPlaceSelected","place","formatted_address","console","log","geometry","location","lat","lng","options","types","componentRestrictions","country","fields","inputAutocompleteValue","locationRef","ref"],"sources":["/Users/mariannebourcier/werun/react-front-end/src/components/AutoComplete.jsx"],"sourcesContent":["import { usePlacesWidget } from \"react-google-autocomplete\";\nimport React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function AutoComplete(props) {\n  const myKey = process.env.REACT_APP_MAP_API_KEY;\n  const { setAddress, setCoords } = props;\n  // const [placeName, setPlaceName] = useState(\"\");\n  // const [address, setAddress] = useState(\"\");\n  // const [coords, setCoords] = useState({ lat: \"\", lng: \"\" });\n  const { ref: locationRef } = usePlacesWidget({\n    apiKey: myKey,\n    onPlaceSelected: (place) => {\n      setAddress(place.formatted_address);\n      console.log(\"This is the place address:\", place.formatted_address)\n      setCoords(\n        place.geometry.location.lat(),\n        place.geometry.location.lng(),\n      );\n    },\n    options: {\n      types: [\"park\"],\n      componentRestrictions: { country: \"ca\" },\n      fields: [\"name\", \"formatted_address\", \"geometry\"],\n    },\n    inputAutocompleteValue: \"text\",\n  });\n  return (\n    <>\n      <Form.Control\n        required\n        type=\"text\"\n        ref={locationRef}\n        // placeholder=\"Which park will this run be at?\"\n        autoComplete=\"text\"\n      />\n    </>\n  );\n}\n"],"mappings":";AAAA,SAASA,eAAT,QAAgC,2BAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EAC1C,IAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAA1B;EAD0C,IAElCC,UAFkC,GAERL,KAFQ,CAElCK,UAFkC;EAAA,IAEtBC,SAFsB,GAERN,KAFQ,CAEtBM,SAFsB,EAG1C;EACA;EACA;;EAL0C,uBAMbX,eAAe,CAAC;IAC3CY,MAAM,EAAEN,KADmC;IAE3CO,eAAe,EAAE,yBAACC,KAAD,EAAW;MAC1BJ,UAAU,CAACI,KAAK,CAACC,iBAAP,CAAV;MACAC,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,KAAK,CAACC,iBAAhD;MACAJ,SAAS,CACPG,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EADO,EAEPN,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBE,GAAxB,EAFO,CAAT;IAID,CAT0C;IAU3CC,OAAO,EAAE;MACPC,KAAK,EAAE,CAAC,MAAD,CADA;MAEPC,qBAAqB,EAAE;QAAEC,OAAO,EAAE;MAAX,CAFhB;MAGPC,MAAM,EAAE,CAAC,MAAD,EAAS,mBAAT,EAA8B,UAA9B;IAHD,CAVkC;IAe3CC,sBAAsB,EAAE;EAfmB,CAAD,CANF;EAAA,IAM7BC,WAN6B,oBAMlCC,GANkC;;EAuB1C,oBACE,uDACE,oBAAC,IAAD,CAAM,OAAN;IACE,QAAQ,MADV;IAEE,IAAI,EAAC,MAFP;IAGE,GAAG,EAAED,WAHP,CAIE;IAJF;IAKE,YAAY,EAAC,MALf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAWD"},"metadata":{},"sourceType":"module"}