{"ast":null,"code":"import { atom } from \"recoil\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useEffect } from \"react\";\nvar userCoordinatesAtom = atom({\n  key: \"userCoordinatesAtom\",\n  default: {\n    lat: null,\n    lng: null\n  }\n});\nexport default userCoordinatesAtom;\n\nvar userLocation = function userLocation() {\n  var setUserCoords = useSetRecoilState(userCoordinatesAtom);\n  useEffect(function () {\n    var success = function success(pos) {\n      var coord = pos.coords;\n      setUserCoords({\n        lat: coord.coords,\n        lng: coord.longitude\n      });\n    };\n\n    var error = function error(err) {\n      console.warn(\"There was an error:\".concat(err.code, \", \").concat(err.message));\n    };\n\n    return navigator.geolocation.getCurrentPosition(success, error);\n  }, [setUserCoords]);\n}; // const getUserCoords = ({ setCenter }) => {\n//   const options = {\n//     enableHighAccuracy: true,\n//     timeout: 5000,\n//     maximumAge: 0,\n//   };\n//   const success = (pos) => {\n//     let coords = pos.coords;\n//     setCenter({ lat: coords.latitude, lng: coords.longitude });\n//   };\n//   const error = (err) => {\n//     console.warn(\n//       `There was an error: ${err.code}, ${err.message}`\n//     );\n//   };\n//   return navigator.geolocation.getCurrentPosition(success, error, options);\n// };\n//export default getUserCoords;\n//export default userCoordinatesAtom;","map":{"version":3,"names":["atom","useSetRecoilState","useEffect","userCoordinatesAtom","key","default","lat","lng","userLocation","setUserCoords","success","pos","coord","coords","longitude","error","err","console","warn","code","message","navigator","geolocation","getCurrentPosition"],"sources":["/Users/mariannebourcier/werun/react-front-end/src/hooks/getUserCoords.js"],"sourcesContent":["import { atom } from \"recoil\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useEffect } from \"react\";\n\nconst userCoordinatesAtom = atom({\n  key: \"userCoordinatesAtom\",\n  default: { lat: null, lng: null},\n});\nexport default userCoordinatesAtom\n\nconst userLocation = () => {\n\nconst setUserCoords = useSetRecoilState(userCoordinatesAtom);\n\n  useEffect(() => {\n    const success = (pos) => {\n      let coord = pos.coords;\n      setUserCoords({ lat: coord.coords, lng: coord.longitude });\n    }\n\n    const error = (err) => {\n      console.warn(`There was an error:${err.code}, ${err.message}`)\n    }\n\n    return navigator.geolocation.getCurrentPosition(success, error);\n    \n  }, [setUserCoords]);\n};\n\n\n\n\n\n\n// const getUserCoords = ({ setCenter }) => {\n//   const options = {\n//     enableHighAccuracy: true,\n//     timeout: 5000,\n//     maximumAge: 0,\n//   };\n\n//   const success = (pos) => {\n//     let coords = pos.coords;\n//     setCenter({ lat: coords.latitude, lng: coords.longitude });\n//   };\n\n//   const error = (err) => {\n//     console.warn(\n//       `There was an error: ${err.code}, ${err.message}`\n//     );\n//   };\n\n//   return navigator.geolocation.getCurrentPosition(success, error, options);\n\n// };\n\n//export default getUserCoords;\n//export default userCoordinatesAtom;"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,IAAMC,mBAAmB,GAAGH,IAAI,CAAC;EAC/BI,GAAG,EAAE,qBAD0B;EAE/BC,OAAO,EAAE;IAAEC,GAAG,EAAE,IAAP;IAAaC,GAAG,EAAE;EAAlB;AAFsB,CAAD,CAAhC;AAIA,eAAeJ,mBAAf;;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;EAE3B,IAAMC,aAAa,GAAGR,iBAAiB,CAACE,mBAAD,CAAvC;EAEED,SAAS,CAAC,YAAM;IACd,IAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;MACvB,IAAIC,KAAK,GAAGD,GAAG,CAACE,MAAhB;MACAJ,aAAa,CAAC;QAAEH,GAAG,EAAEM,KAAK,CAACC,MAAb;QAAqBN,GAAG,EAAEK,KAAK,CAACE;MAAhC,CAAD,CAAb;IACD,CAHD;;IAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAS;MACrBC,OAAO,CAACC,IAAR,8BAAmCF,GAAG,CAACG,IAAvC,eAAgDH,GAAG,CAACI,OAApD;IACD,CAFD;;IAIA,OAAOC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCb,OAAzC,EAAkDK,KAAlD,CAAP;EAED,CAZQ,EAYN,CAACN,aAAD,CAZM,CAAT;AAaD,CAjBD,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA"},"metadata":{},"sourceType":"module"}